fieldset
  legend Выбор условий поступления
  .(v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 1")
    p Вы имеете право отметить любое количество конкурсов (в том числе все) из списка, представленного ниже. Каждый абитуриент, не имеющий высшего образования, может участвовать в общем конкурсе на каждую специальность и на бюджетной, и на внебюджетной основе. Лица, имеющие высшее образование могут поступать только на внебюджетной основе. Конкурсы по особой и целевой квотам становятся доступны только в том случае, если Вы заполнили соответствующие поля и прикрепили документы, подтверждающие право на участие в конкурсе по особой и/или целевой квоте.
  . v-if = "findAttachment(entrant_application.id, 'entrant_application', false)"
    strong Вы уже загрузили заявление о поступлении, поэтому после добавления нового конкурса Вам будет необходимо заново скачать бланк заявления, подписать его и загрузить на вкладке Заявления
  .(v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 4") 
    p Вы имеете право выбрать две специальности для поступления, внутри которых Вы можете отметить любое количество конкурсов при наличии оснований для участия в них. Для участия в конкурсе в пределах квоты целевого приема необходимо заключить договор с заказчиком целевого обучения.
  .row
    .large-12.small-12.columns
      .(v-for="admission_volume in findCampaign(entrant_application.campaign_id).admission_volumes")
        p 
          strong= "{{ specialityName(admission_volume.direction_id) }}"
        .row(v-for="competitive_group in findCampaign(entrant_application.campaign_id).competitive_groups" v-if="competitive_group.direction_id == admission_volume.direction_id && isApplicable(competitive_group)")
          .large-1.small-1.columns
            input.error(type="checkbox" v-bind:id="'competitive_group_' + competitive_group.id" v-bind:name="'competitive_groups[][id]'" v-bind:value="competitive_group.id" v-model="entrant_application.competitive_group_ids" v-on:change="sendData('competitive_group', entrant_application.competitive_group_ids)" v-bind:disabled == "findCompetitiveGroup(competitive_group.id) && entrant_application.status_id != 0")
          .large-11.small-11.columns
            label(v-bind:for="competitive_group.id")
              span = "{{ competitive_group.name }} (количество мест: {{ competitive_group.number }})"
fieldset(v-bind:disabled = 'isDisabled')
  legend Выбор вступительных испытаний
  .(v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 1") 
    p Вступительные испытания, проводимые академией самостоятельно, имеют право сдавать ТОЛЬКО:
    ul
      li лица, поступающие на обучение на базе среднего профессионального или высшего образования;
      li инвалиды (в том числе дети-инвалиды);
      li иностранные граждане;
      li по тем предметам, по которым поступающий не сдавал ЕГЭ в текущем календарном году - если поступающий получил документ о среднем общем образовании в иностранной организации.
    p Результаты ЕГЭ будут подгружаться в нашу систему автоматически из Федеральной базы.

  p(v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 4") В качестве вступительных испытаний указывается результат аккредитационного теста (Аккредитация) или вступительное испытание (ВИ), проводимое на базе ИвГМА. Выбранную форму (а также место сдачи теста) необходимо указывать ОДИНАКОВО во всех вузах, куда Вы собираетесь подавать документы. Министерство здравоохранения отслеживает, что поступающий указывает в качестве вступительного испытания.
  .row
    .large-12.small-12.columns
      table
        thead
          tr
            th Предмет
            th Форма экзамена
            th(v-show="findCampaign(entrant_application.campaign_id).campaign_type_id == 4") Оценка
            th(v-show="findCampaign(entrant_application.campaign_id).campaign_type_id == 4") Год сдачи
            th(v-if="findCampaign(entrant_application.campaign_id).campaign_type_id == 4") Название организации сдачи экзамена
        tbody
          tr(v-for="(mark, index) in entrant_application.marks")
            td = "{{ findEntranceTestItem(mark.subject_id).subject_name }} (минимальный балл {{ findEntranceTestItem(mark.subject_id).min_score }})"
            td
              .(v-if="findCampaign(entrant_application.campaign_id).campaign_type_id == 1")
                = select_tag 'marks[][form]', options_for_select(['ЕГЭ', 'ВИ']), include_blank: '', 'v-model.trim': 'mark.form', 'v-on:change': "sendData('mark', mark, index)"
              .(v-if="findCampaign(entrant_application.campaign_id).campaign_type_id == 4")
                = select_tag 'marks[][form]', options_for_select(['Аккредитация', 'ВИ']), include_blank: '', 'v-model.trim': 'mark.form', 'v-on:change': "sendData('mark', mark, index)"
              small.error v-if="findErrorMessage('mark.form')" == "{{ findErrorMessage('mark.form') }}"
            td(v-show="findCampaign(entrant_application.campaign_id).campaign_type_id == 4")
              span(v-show="mark.form == 'Аккредитация'")= number_field_tag 'marks[][value]', nil, 'v-bind:min': 'mark.minScore', max: 100, 'v-model.trim': 'mark.value'
            td(v-show="findCampaign(entrant_application.campaign_id).campaign_type_id == 4")
              span(v-show="mark.form == 'Аккредитация'")= number_field_tag 'marks[][year]', nil, 'v-bind:min': 'findCampaign(entrant_application.campaign_id).year_start - 1', 'v-bind:max': 'findCampaign(entrant_application.campaign_id).year_start', 'v-model.trim':'mark.year', 'v-on:change': "sendData('mark', mark, index)"
              small.error v-if="findErrorMessage('mark.form')" == "{{ findErrorMessage('mark.form') }}"
            td(v-if="findCampaign(entrant_application.campaign_id).campaign_type_id == 4")
              = text_field_tag 'marks[][organization_uid]', nil, 'v-model.tirm': 'mark.organization_uid', 'v-on:change': "sendData('mark', mark, index)"

fieldset
  legend Указать индивидуальные достижения
  .(v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 1")
    p Необходимо подтвердить наличие индивидуального достижения, прикрепив копию соответствующего документа. 
    p Подтверждающими документами являются: копия документа об образовании (диплома или аттестата, в которых написано, что они – с отличием), удостоверение о награждении золотым значком ГТО, диплома победителя чемпионата «Абилимпикс».
    p Обратите внимание: начисление баллов за индивидуальные достижения происходит не сразу, а после заседания комиссии по индивидуальным достижениям.
    p Максимальное количество баллов за индивидуальные достижения – 10.
    p
      strong Обращаем Ваше внимание, что аттестаты для награжденных медалями - это аттестаты старого образца (полученные до 2014 года). Современные аттестаты - это Аттестаты с отличием.
  .row(v-for="institution_achievement in findCampaign(entrant_application.campaign_id).institution_achievements")
    .large-1.small-1.columns
      input.error(type="checkbox" v-bind:id="'institution_achievement' + institution_achievement.id" v-bind:name="'institution_achievement_ids[]'" v-bind:value="institution_achievement.id" v-model="entrant_application.achievement_ids" v-on:change="sendData('achievement', entrant_application.achievement_ids)" v-bind:disabled = 'isDisabled')
    .large-11.small-11.columns
      label(v-bind:for="institution_achievement.id")
        span = "{{ institution_achievement.name }} (дополнительные баллы: {{ institution_achievement.max_value }})"
    .large-12.small-12.columns(v-if="findAchievement(institution_achievement.id) == institution_achievement.id")
      br
      dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл(ы).', document_type: 'achievement', document_id: 'institution_achievement.id', entrant_application_id: 'entrant_application.id', ref_name: 'achievement', id: 'achievement'}
    .large-12.small-12.columns(v-if="entrant_application.attachments.length > 0")
      ul.no-bullet
        li(v-for="attachment in entrant_application.attachments" v-if="attachment.document_type == 'achievement' && attachment.document_id == institution_achievement.id")
          a v-bind:href = "'/api/attachments/' + attachment.data_hash + '?filename=' + attachment.filename" target = '_blank' {{ attachment.filename }}
