fieldset
  legend Выбор условий поступления
  .(v-if="entrant.campaign.campaign_type == 'Прием на обучение на бакалавриат/специалитет'")
    p Вы имеете право отметить любое количество конкурсов (в том числе все) из списка, представленного ниже. Каждый абитуриент, не имеющий высшего образования, может участвовать в конкурсе на основные места на каждую специальность и на бюджетной, и на внебюджетной основе. Лица, имеющие высшее образование могут поступать только на внебюджетной основе. 
    p Конкурсы по особой, специальной и целевой квотам становятся доступны только в том случае, если Вы заполнили соответствующие поля и прикрепили документы, подтверждающие право на участие в конкурсе по особой, специальной и/или целевой квоте на вкладке Льготы.
    p Для участия в конкурсе в пределах квоты целевого приема необходимо заключить договор с заказчиком целевого обучения и загрузить его на вкладке Целевой прием.
  . v-if = "findAttachment(entrant.id, 'entrant_application', false)"
    strong Вы уже загрузили заявление о поступлении, поэтому после добавления нового конкурса Вам будет необходимо заново скачать бланк заявления, подписать его и загрузить на вкладке Заявления
  .(v-if="entrant.campaign.campaign_type == 'Прием на подготовку кадров высшей квалификации'")
    p Вы имеете право выбрать ДВЕ специальности для поступления, внутри которых Вы можете отметить любое количество конкурсов при наличии оснований для участия в них. Для участия в конкурсе в пределах квоты целевого приема необходимо заключить договор с заказчиком целевого обучения и загрузить его на вкладке Целевой прием.
  .row
    .large-12.small-12.columns
      .(v-for="direction in api.dictionaries.campaign.directions")
        p 
          strong= "{{ direction.name }}"
        .row(v-for="competitive_group in api.dictionaries.campaign.competitive_groups" v-if="competitive_group.direction_name == direction.name && isApplicable(competitive_group)")
          .large-1.small-1.columns
            input.error(type="checkbox" v-bind:id="'competitive_group_' + competitive_group.id" v-bind:name="'competitive_groups[][id]'" v-bind:value="competitive_group.id" v-model="entrant.competitive_group_ids" v-on:change="sendData('competitive_group_ids', entrant.competitive_group_ids)" v-bind:disabled == "findCompetitiveGroup(competitive_group.id) && entrant.stage > 0 || egeDate(competitive_group)")
          .large-11.small-11.columns
            label(v-bind:for="competitive_group.id")
              span= "{{ competitive_group.name }} (количество мест: {{ competitive_group.admission_number }})"
              span(v-if="egeDate(competitive_group)")= " - прием документов завершен"
fieldset
  legend Вступительные испытания
  .(v-if="entrant.campaign.campaign_type == 'Прием на обучение на бакалавриат/специалитет'")
    p Вступительные испытания, проводимые академией самостоятельно, имеют право сдавать ТОЛЬКО:
    ul
      li лица, поступающие на обучение на базе высшего образования;
      li инвалиды (в том числе дети-инвалиды);
      li иностранные граждане;
      li по тем предметам, по которым поступающий не сдавал ЕГЭ в текущем календарном году - если поступающий получил документ о среднем общем образовании в иностранной организации;
      li граждане Российской Федерации, которые до прибытия на территорию Российской Федерации проживали на территории Донецкой Народной Республики, Луганской Народной Республики, Украины, а также граждане Российской Федерации, которые были вынуждены прервать свое обучение в иностранных образовательных организациях;
      li лица, поступающие в пределах специальной квоты (дети военнослужащих и сотрудников федеральных органов исполнительной власти и федеральных государственных органов, принимающих (принимавших) участие в специальной военной операции на территориях ДНР, ЛНР и Украины, за исключением погибших (умерших), получивших увечье (ранение, травму, контузию) или заболевание).
      
    p ВСЕ остальные категории абитуриентов могут поступать в академию ТОЛЬКО по результатам ЕГЭ. Результаты ЕГЭ будут подгружаться в нашу систему автоматически из Федеральной базы.
    .row(v-bind:disabled = 'isDisabled')
      .large-1.small-1.columns
        input#exam(type="checkbox" name="exam" v-bind:value="true" v-model="entrant.questionnaire['exam']" v-on:change = "sendData('questionnaire', entrant.questionnaire)" v-bind:disabled = 'isDisabled')
      .large-11.small-11.columns
        label
          span Имею право и собираюсь сдавать вступительные испытания, проводимые вузом самостоятельно./
    
    p Вступительные испытания: химия, биология, русский язык. Минимальный балл по каждому предмету - 40.
  .(v-if="entrant.campaign.campaign_type == 'Прием на подготовку кадров высшей квалификации'")
    .row
      .large-12.small-12.columns
        table
          thead
            tr
              th Предмет
              th Форма экзамена
              th Оценка
              th Год сдачи
              th Название организации сдачи экзамена
          tbody
            tr(v-for="(mark, index) in entrant.marks[0].marks")
              td Здравоохранение (минимальный балл 70)
              td
                .
                  = select_tag 'marks[][test_type]', options_for_select(['Аккредитация', 'ВИ']), include_blank: '', 'v-model.trim': 'mark.test_type', 'v-on:change': "sendData('mark', mark, index)"
                small.error v-if="findErrorMessage('mark.test_type')" == "{{ findErrorMessage('mark.test_type') }}"
              td
                span(v-show="mark.test_type == 'Аккредитация'")= number_field_tag 'marks[][value]', nil, min: 70, max: 100, 'v-model.trim': 'mark.value'
              td
                span(v-show="mark.test_type == 'Аккредитация'")= number_field_tag 'marks[][year]', nil, 'v-bind:min': 'entrant.campaign.year_start - 1', 'v-bind:max': 'entrant.campaign.year_start', 'v-model.trim':'mark.year', 'v-on:change': "sendData('mark', mark, index)"
                small.error v-if="findErrorMessage('mark.test_type')" == "{{ findErrorMessage('mark.test_type') }}"
              td
                = text_field_tag 'marks[][organization_uid]', nil, 'v-model.tirm': 'mark.organization_uid', 'v-on:change': "sendData('mark', mark, index)"

fieldset
  legend Указать индивидуальные достижения
  .(v-if="entrant.campaign.campaign_type == 'Прием на обучение на бакалавриат/специалитет'")
    p Необходимо подтвердить наличие индивидуального достижения, прикрепив копию соответствующего документа. 
    p Подтверждающими документами являются: копия документа об образовании (диплома или аттестата, в которых написано, что они – с отличием), удостоверение о награждении золотым значком ГТО, диплома победителя чемпионата «Абилимпикс».
    p Обратите внимание: начисление баллов за индивидуальные достижения происходит не сразу, а после заседания комиссии по индивидуальным достижениям. Результат рассмотрения будет 
    p Максимальное количество баллов за индивидуальные достижения – 10.
    .row(v-for="institution_achievement in api.dictionaries.institution_achievements_spec")
      .large-1.small-1.columns
        input.error(type="checkbox" v-bind:id="'institution_achievement' + institution_achievement.id" v-bind:name="'institution_achievement_ids[]'" v-bind:value="institution_achievement.id" v-model="entrant.achievement_ids" v-on:change="sendData('institution_achievement_ids', entrant.achievement_ids)" v-bind:disabled = 'isDisabled')
      .large-11.small-11.columns
        label(v-bind:for="institution_achievement.id")
          span = "{{ institution_achievement.name }} (дополнительные баллы: {{ institution_achievement.max_value }})"
      .large-12.small-12.columns(v-if="findAchievement(institution_achievement.id) == institution_achievement.id")
        br
        dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл(ы).', document_type: 'achievement', document_id: 'institution_achievement.id', entrant_id: 'entrant.id', ref_name: 'achievement', id: 'achievement'}
      .large-12.small-12.columns(v-if="entrant.attachments.length > 0")
        ul.no-bullet
          li(v-for="attachment in entrant.attachments" v-if="attachment.document_type == 'achievement' && attachment.document_id == institution_achievement.id")
            a v-bind:href = "'/api/attachments/' + attachment.data_hash + '?filename=' + attachment.filename" target = '_blank' {{ attachment.filename }}
  .(v-if="entrant.campaign.campaign_type == 'Прием на подготовку кадров высшей квалификации'")
    p Необходимо подтвердить наличие индивидуального достижения, прикрепив копию соответствующего документа. 
    p Обратите внимание: начисление баллов за индивидуальные достижения происходит не сразу, а после заседания комиссии по индивидуальным достижениям. Результат рассмотрения будет 
    .row(v-for="institution_achievement in api.dictionaries.campaign.institution_achievements")
      .large-1.small-1.columns
        input.error(type="checkbox" v-bind:id="'institution_achievement' + institution_achievement.id" v-bind:name="'institution_achievement_ids[]'" v-bind:value="institution_achievement.id" v-model="entrant.achievement_ids" v-on:change="sendData('institution_achievement_ids', entrant.achievement_ids)" v-bind:disabled = 'isDisabled')
      .large-11.small-11.columns
        label(v-bind:for="institution_achievement.id")
          span = "{{ institution_achievement.name }} (дополнительные баллы: {{ institution_achievement.max_value }})"
      .large-12.small-12.columns(v-if="findAchievement(institution_achievement.id) == institution_achievement.id")
        br
        dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл(ы).', document_type: 'achievement', document_id: 'institution_achievement.id', entrant_id: 'entrant.id', ref_name: 'achievement', id: 'achievement'}
      .large-12.small-12.columns(v-if="entrant.attachments.length > 0")
        ul.no-bullet
          li(v-for="attachment in entrant.attachments" v-if="attachment.document_type == 'achievement' && attachment.document_id == institution_achievement.id")
            a v-bind:href = "'/api/attachments/' + attachment.data_hash + '?filename=' + attachment.filename" target = '_blank' {{ attachment.filename }}
