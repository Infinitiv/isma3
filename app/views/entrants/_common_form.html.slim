fieldset
  .row
    .large-12.small-12.columns
      p Непосредственно перед заполнением анкеты поступающего, необходимо выполнить два формальных шага - скачать и заполнить согласие на обработку и распространение персональных данных и подтвердить адрес электронной почты, который будет использован для взаимодействия с Вами сотрудников приемной комиссии.
      p
        span Если Вам 
        strong НЕТ 
        span 18 лет:
        br
        =link_to ' Бланк согласия на обработку и распространние персональных данных', '/attachments/61367', target: '_blank'
      p
        span Если Вам 
        strong ЕСТЬ 
        span 18 лет:
        br
        =link_to ' Бланк согласия на обработку и распространние персональных данных', '/attachments/61368', target: '_blank'
fieldset(v-if="entrant_application.id")
  legend Прикрепите копию согласия на обработку персональных данных
  .row
    .large-12.small-12.columns
      = render partial: 'add_attachment', locals: {document_type: 'data_processing_consent', message: 'Можно загрузить один или несколько файлов', document_id: 'entrant_application.id', entrant_application_id: 'entrant_application.id', ref_name: 'data_processing_consent', id: 'data_processing_consent'}
  .row(v-for="attachment in entrant_application.attachments")
    .large-12.small-12.columns
      p(v-if="attachment.document_type == 'data_processing_consent'")
        a v-bind:href = "'/api/attachments/' + attachment.data_hash + '?filename=' + attachment.filename" target = '_blank' {{ attachment.filename }}

fieldset(v-bind:disabled = 'isDisabled')
  legend Персональные данные
  p Фамилию, имя и отчество следует писать в именительном падеже в строгом соответствии с паспортными данными. Особое внимание стоит обратить на наличие или отсутствие буквы Ё, вариантное написание имен типа НаталЬЯ/НаталИЯ и т.д. При наличии составных имени, фамилии или отчества также необходимо ориентироваться на написание в паспорте - поставить пробел или дефис. Перед дефисом и после него пробел не ставится.
  .row
    .large-4.small-12.columns
      = label_tag :entrant_last_name
        span Фамилия
        = text_field_tag :entrant_last_name, nil, placeholder: 'Как в паспорте', 'v-model.trim': 'entrant_application.personal.entrant_last_name', class: 'error', 'v-on:change': 'sendData("personal", entrant_application.personal)'
      small.error v-if="checkEntrantLastName" == "{{ checkEntrantLastName }}"
      small.error v-if="findErrorMessage('entrant_last_name')" == "{{ findErrorMessage('entrant_last_name') }}"
    .large-4.small-12.columns
      = label_tag :entrant_first_name
        span Имя
        = text_field_tag :entrant_first_name, nil, placeholder: 'Как в паспорте', 'v-model.trim': 'entrant_application.personal.entrant_first_name', class: 'error', 'v-on:change': 'sendData("personal", entrant_application.personal)'
      small.error v-if="checkEntrantFirstName" == "{{ checkEntrantFirstName }}"
      small.error v-if="findErrorMessage('entrant_first_name')" == "{{ findErrorMessage('entrant_first_name') }}"
    .large-4.small-12.columns
      = label_tag :entrant_middle_name
        span Отчество
        = text_field_tag :entrant_middle_name, nil, placeholder: 'Как в паспорте, если есть', 'v-model.trim': 'entrant_application.personal.entrant_middle_name', class: 'error', 'v-on:change': 'sendData("personal", entrant_application.personal)'
      small.error v-if="checkEntrantMiddleName" == "{{ checkEntrantMiddleName }}"
      small.error v-if="findErrorMessage('entrant_middle_name')" == "{{ findErrorMessage('entrant_middle_name') }}"
  .row
    .large-4.small-12.columns
      = label_tag :birth_date
        span Дата рождения
        = date_field_tag :birth_date, nil, 'v-model': 'entrant_application.personal.birth_date', class: 'error', 'v-on:change': 'sendData("personal", entrant_application.personal)'
      small.error v-if="findErrorMessage('birth_date')" == "{{ findErrorMessage('birth_date') }}"
    .large-4.small-12.columns
      = label_tag :gender_id, 'Пол'
      = radio_button_tag :gender_id, '2', true, 'v-model': 'entrant_application.personal.gender_id', 'v-on:change': 'sendData("personal", entrant_application.personal)'
      = label_tag :gender_id, 'женский'
      = radio_button_tag :gender_id, '1', false, 'v-model': 'entrant_application.personal.gender_id', 'v-on:change': 'sendData("personal", entrant_application.personal)'
      = label_tag :gender_id, 'мужской'
      small.error v-if="findErrorMessage('gender_id')" == "{{ findErrorMessage('gender_id') }}"
    .large-4.small-12.columns
      = label_tag :phone
        span Мобильный телефон
        = phone_field_tag :phone, nil, placeholder: '+79999999999', 'v-model.trim': 'entrant_application.contact_information.phone', class: 'error', 'v-on:change': "sendData('contact_information', entrant_application.contact_information)"
      small.error v-if="findErrorMessage('entrant_application.contact_information.phone')" == "{{ findErrorMessage('entrant_application.contact_information.phone') }}"
fieldset
  legend Документы, удостоверяющие личность
  p Указываются данные действующего документа, удостоверяющего личность.
  p (v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 1") Если паспорт меняли после сдачи ЕГЭ, то необходимо также указать данные ранее выданного паспорта, нажав на кнопку "Указать данные дополнительного документа". Эти сведения используются при проверке результатов ЕГЭ.
  p (v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 4") Если сдавали аккредитацию и сменили паспорт после ее сдачи, то необходимо также указать данные ранее выданного паспорта, нажав на кнопку "Указать данные дополнительного документа". Эти сведения используются при проверке результатов теста.
  . v-for="(document, index) in entrant_application.identity_documents"
    .row
      .(v-show="entrant_application.identity_documents.indexOf(document) > 0") Предыдущий документ
      .large-4.small-12.columns
        label
          span Вид документа
        select.error#identity_document_type(name="identity_documents[][identity_document_type]" v-model='document.identity_document_type' v-on:change="sendData('identity_document', document, index)" v-bind:disabled = 'isDisabled')
          option(disabled value) Выберите вид документа
          option(v-for="identity_document_type in api.dictionaries.identity_document_types" v-bind:value="identity_document_type.id") {{ identity_document_type.name }}
      .large-4.small-12.columns
        = label_tag :identity_document_series
          span Серия документа
          = text_field_tag 'identity_documents[][identity_document_series]', nil, placeholder: 'Укажите серию документа', 'v-model.trim': 'document.identity_document_series', class: 'error', 'v-on:change': "sendData('identity_document', document, index)", 'v-bind:disabled': 'isDisabled'
      .large-4.small-12.columns
        = label_tag :identity_document_number
          span Номер документа
          = text_field_tag 'identity_documents[][identity_document_number]', nil, placeholder: 'Укажите номер документа', 'v-model.trim': 'document.identity_document_number', class: 'error', 'v-on:change': "sendData('identity_document', document, index)", 'v-bind:disabled': 'isDisabled'
    .row
      .large-4.small-12.columns
        = label_tag :identity_document_date
          span Дата выдачи документа
          = date_field_tag 'identity_documents[][identity_document_date]', nil, placeholder: 'Дата выдачи документа', 'v-model.trim': 'document.identity_document_date', class: 'error', 'v-on:change': "sendData('identity_document', document, index)", 'v-bind:disabled': 'isDisabled'
        small.error v-if="checkIdentityDocumentDate" == "{{ checkIdentityDocumentDate }}"
      .large-8.small-12.columns(v-show="entrant_application.identity_documents.indexOf(document) < 1")
        = label_tag :identity_document_issuer
          span Кем выдан документ
          = text_field_tag 'identity_documents[][identity_document_issuer]', nil, placeholder: 'Укажите, кто выдал документ', 'v-model.trim': 'document.identity_document_issuer', class: 'error', 'v-on:change': "sendData('identity_document', document, index)", 'v-bind:disabled': 'isDisabled'
    .row
      .large-4.small-12.columns(v-show="entrant_application.identity_documents.indexOf(document) > 0")
        = label_tag :alt_entrant_last_name
          span Прежняя фамилия
          = text_field_tag 'identity_documents[][alt_entrant_last_name]', nil, placeholder: 'Как в паспорте, если меняли', 'v-model.trim': 'document.alt_entrant_last_name', class: 'error', 'v-on:change': "sendData('identity_document', document, index)", 'v-bind:disabled': 'isDisabled'
        small.error v-if="checkEntrantLastName" == "{{ checkEntrantLastName }}"
      .large-4.small-12.columns(v-show="entrant_application.identity_documents.indexOf(document) > 0")
        = label_tag :alt_entrant_first_name
          span Прежнее имя
          = text_field_tag 'identity_documents[][alt_entrant_first_name]', nil, placeholder: 'Как в паспорте, если меняли', 'v-model.trim': 'document.alt_entrant_first_name', class: 'error', 'v-on:change': "sendData('identity_document', document, index)", 'v-bind:disabled': 'isDisabled'
        small.error v-if="checkEntrantFirstName" == "{{ checkEntrantFirstName }}"
      .large-4.small-12.columns(v-show="entrant_application.identity_documents.indexOf(document) > 0")
        = label_tag :alt_entrant_middle_name
          span Прежнее отчество
          = text_field_tag 'identity_documents[][alt_entrant_middle_name]', nil, placeholder: 'Как в паспорте, если есть', 'v-model.trim': 'document.alt_entrant_middle_name', class: 'error', 'v-on:change': "sendData('identity_document', document, index)", 'v-bind:disabled': 'isDisabled'
        small.error v-if="checkEntrantMiddleName" == "{{ checkEntrantMiddleName }}"
    .row(v-if="document.id")
      .large-12.small-12.columns
        br
        = render partial: 'add_attachment', locals: { message: 'Необходимо прикрепить отсканированные или сфотографированные электронные копии документа, удостоверяющего личность. Прикрепляются страницы паспорта с персональными данными, сведениями об организации, выдавшей паспорт (разворот 2 и 3 страницы), с данными о регистрации, с данными о ранее выданных паспортах (при наличии). Если в паспорте отсутствуют сведения о регистрации, можно прикрепить копию справки о регистрации по месту жительства. Если в качестве документа, удостоверяющего личность, указан другой документ, прикрепляются копии всех страниц, содержащих информацию.', document_type: 'identity_document', document_id: 'document.id', entrant_application_id: 'entrant_application.id', ref_name: 'identity_document', id: 'identity_document'}
    .row(v-for="attachment in entrant_application.attachments")
      .large-12.small-12.columns
        p(v-if="attachment.document_type == 'identity_document' && attachment.document_id == document.id")
          a v-bind:href = "'/api/attachments/' + attachment.data_hash + '?filename=' + attachment.filename" target = '_blank' {{ attachment.filename }}
  .row v-if="entrant_application.status_id == 0"
    .button.tiny @click="addIdentityDocument" Указать данные дополнительного документа
    span &nbsp;
    .button.tiny(v-if="entrant_application.identity_documents.length > 1" @click="deleteIdentityDocument") Удалить документ
fieldset
  legend Документ об образовании
  p(v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 1") Сведения о документе об образовании — это данные того документа, который будет подан в приемную комиссию. При поступлении по результатам ЕГЭ обычно это аттестат, но при наличии у Вас нескольких документов об образовании (аттестата и диплома), Вы можете выбрать, какой из них подать. При поступлении по результатам внутренних экзаменов абитуриент подает диплом о среднем профессиональном или высшем образовании.
  .row
    .large-6.small-12.columns
      label
        span Вид документа
      select.education_document_type(name="education_document[education_document_type]" v-model='entrant_application.education_document.education_document_type' v-on:change = "sendData('education_document', entrant_application.education_document)" v-bind:disabled = 'isDisabled')
        option(disabled value) Выберите вид документа
        option(v-for="education_document_type in api.dictionaries.education_document_types" v-bind:value="education_document_type.id") {{ education_document_type.name }}
      small.error v-if="findErrorMessage('education_document_type')" == "{{ findErrorMessage('education_document_type') }}"
    .large-6.small-12.columns
      = label_tag :education_document_number
        span Серия и номер документа
        = text_field_tag 'education_document[education_document_number]', nil, placeholder: 'Укажите серию и номер документа', 'v-model.trim': 'entrant_application.education_document.education_document_number', class: 'error', 'v-on:change': "sendData('education_document', entrant_application.education_document)", 'v-bind:disabled': 'isDisabled'
      small.error v-if="findErrorMessage('education_document_number')" == "{{ findErrorMessage('education_document_number') }}"
  .row
    .large-4.small-12.columns
      = label_tag :education_document_date
        span Дата выдачи документа
        = date_field_tag 'education_document[education_document_date]', nil, placeholder: 'Дата выдачи документа', 'v-model.trim': 'entrant_application.education_document.education_document_date', class: 'error', 'v-on:change': "sendData('education_document', entrant_application.education_document)", 'v-bind:disabled': 'isDisabled'
      small.error v-if="checkEducationDocumentDate" == "{{ checkEducationDocumentDate }}"
      small.error v-if="findErrorMessage('education_document_date')" == "{{ findErrorMessage('education_document_date') }}"
    .large-8.small-12.columns(v-if="findCampaign
      = label_tag :education_document_issuer
        span Кем выдан документ
        = text_field_tag 'education_document[education_document_issuer]', nil, placeholder: 'Укажите, кто выдал документ', 'v-model.trim': 'entrant_application.education_document.education_document_issuer', class: 'error', 'v-on:change': "sendData('education_document', entrant_application.education_document)", 'v-bind:disabled': 'isDisabled'
      small.error v-if="findErrorMessage('education_document_issuer')" == "{{ findErrorMessage('education_document_issuer') }}"
    .large-4.small-12.columns(v-if="entrant_application.campaign_id != '' && findCampaign(entrant_application.campaign_id).campaign_type_id == 4")
      label
        span Специальность по диплому
      select.error#education_speciality_code(name="education_document[education_speciality_code]" v-model='entrant_application.education_document.education_speciality_code' v-on:change = "sendData('education_document', entrant_application.education_document)")
        option(disabled value) Выберите специальность
        option(v-for="education_speciality_code in api.dictionaries.education_speciality_codes" v-bind:value="education_speciality_code.code") {{ education_speciality_code.name }}
  .row(v-if="entrant_application.education_document.id")
    .large-12.small-12.columns
      br
      dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл(ы). Сканируются / фотографируются и прикрепляются ВСЕ страницы аттестата или диплома и ВСЕ страницы приложения.', document_type: 'education_document', document_id: 'entrant_application.education_document.id', entrant_application_id: 'entrant_application.id', ref_name: 'education_document', id: 'education_document'}
  .row(v-for="attachment in entrant_application.attachments")
    .large-12.small-12.columns
      p(v-if="attachment.document_type == 'education_document'")
        a v-bind:href = "'/api/attachments/' + attachment.data_hash + '?filename=' + attachment.filename" target = '_blank' {{ attachment.filename }}
fieldset
  legend Страховое свидетельство обязательного пенсионного страхования (СНИЛС)
  .row
    .large-4.small-12.columns
      = label_tag :snils
        span Укажите только цифры без дефисов и пробелов
        = text_field_tag :snils, nil, 'v-model': 'entrant_application.snils', class: 'error', maxlength: 11, placeholder: '00000000000', 'v-on:change': "sendData('snils', entrant_application.snils)", 'v-bind:disabled': 'isDisabled'
      small.error v-if="findErrorMessage('snils')" == "{{ findErrorMessage('snils') }}"
    .large-7.small-12.columns(v-if="entrant_application.snils == ''")
      = label_tag :snils_absent
        span Подтверждаю отсутствие страхового свидетельства обязательного пенсионного страхования (СНИЛС)
    .large-1.small-12.columns(v-if="entrant_application.snils == ''")
      input#snils(type="checkbox" name="snils" v-bind:value="true" v-model="entrant_application.snils_absent" v-on:change="sendData('snils_absent', entrant_application.snils_absent)" v-bind:disabled = 'isDisabled')
  .row(v-if="entrant_application.snils")
    .large-12.small-12.columns
      br
      dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл(ы).', document_type: 'snils', document_id: 'entrant_application.id', entrant_application_id: 'entrant_application.id', ref_name: 'snils', id: 'snils'}
  .row(v-for="attachment in entrant_application.attachments")
    .large-12.small-12.columns
      p(v-if="attachment.document_type == 'snils'")
        a v-bind:href = "'/api/attachments/' + attachment.data_hash + '?filename=' + attachment.filename" target = '_blank' {{ attachment.filename }}
